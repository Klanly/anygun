INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../common)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../common/lua)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../common/rpc)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../common/gen_rpc)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../tables)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/script)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/tables)

AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR} WORLD_SRC)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/script SCRIPT_SRC)

ADD_EXECUTABLE(world ${WORLD_SRC} ${SCRIPT_SRC})

TARGET_LINK_LIBRARIES(world common)
TARGET_LINK_LIBRARIES(world tables)
IF(WIN32)
	TARGET_LINK_LIBRARIES(world ACEd.lib)
ELSEIF(UNIX)
	TARGET_LINK_LIBRARIES(world libACE.a)
	TARGET_LINK_LIBRARIES(world libsupc++.a)
	TARGET_LINK_LIBRARIES(world pthread)
	TARGET_LINK_LIBRARIES(world dl)
	TARGET_LINK_LIBRARIES(world z)
	TARGET_LINK_LIBRARIES(world ${CURL_LIBRARY} )
	TARGET_LINK_LIBRARIES(world ${Boost_LIBRARIES})
ENDIF()
ADD_DEPENDENCIES(world common)
ADD_DEPENDENCIES(world tables)
INSTALL(TARGETS	world RUNTIME DESTINATION bin )
